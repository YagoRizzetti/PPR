Object subclass: #Apuesta	instanceVariableNames: 'nroApuesta fechaHora monto dniApostador'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1_PPR'!!Apuesta commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	dniApostador:		<Object>	fechaHora:		<Object>	monto:		<Object>	nroApuesta:		<Object>    Implementation Points!!Apuesta methodsFor: 'propios' stamp: 'sa 4/19/2020 15:49'!cuantoPaga		^self subclassResponsibility.! !!Apuesta methodsFor: 'propios' stamp: 'sa 4/24/2020 17:09'!asString	"comment stating purpose of message"	| aux |	aux:= 'Datos de la apuesta: ', String cr, 'Número de apuesta: ', nroApuesta asString, String cr,	'Fecha y hora: ', fechaHora asString, String cr, 'Monto apostado: ', monto asString, String cr,	'DNI apostador: ', dniApostador asString, String cr.	^aux.! !!Apuesta methodsFor: 'accessing' stamp: 'BV 4/19/2020 14:57'!nroApuesta	^ nroApuesta! !!Apuesta methodsFor: 'accessing' stamp: 'BV 4/19/2020 14:57'!dniApostador	^ dniApostador! !!Apuesta methodsFor: 'accessing' stamp: 'BV 4/19/2020 14:57'!monto	^ monto! !!Apuesta methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:26'!nroApuesta: anObject	anObject isInteger ifTrue: [nroApuesta := anObject].! !!Apuesta methodsFor: 'accessing' stamp: 'sa 4/19/2020 20:29'!monto: anObject	(anObject isNumber) ifTrue: [monto := anObject].	! !!Apuesta methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:24'!dniApostador: anObject	anObject isInteger ifTrue: [dniApostador := anObject].! !!Apuesta methodsFor: 'accessing' stamp: 'BV 4/19/2020 14:57'!fechaHora	^ fechaHora! !!Apuesta methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:25'!fechaHora: anObject	(anObject isString) ifTrue:[fechaHora := anObject].! !!Apuesta methodsFor: 'initialization' stamp: 'sa 4/19/2020 15:43'!initialize	super initialize.	dniApostador := 0.	fechaHora := 'sin fechaHora'.	monto := 0.	nroApuesta := 0.! !Apuesta subclass: #ApuestaSimple	instanceVariableNames: 'caballo'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1_PPR'!!ApuestaSimple commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	caballo:		<Object>    Implementation Points!!ApuestaSimple methodsFor: 'propios' stamp: 'sa 4/19/2020 15:56'!cuantoPaga	"comment stating purpose of message"	| aux |	aux:= super monto * 2.	^aux.! !!ApuestaSimple methodsFor: 'propios' stamp: 'sa 4/24/2020 17:09'!asString	"comment stating purpose of message"	| aux |	aux:= super asString, 'Caballo: ', String cr, caballo asString.	^aux.! !!ApuestaSimple methodsFor: 'accessing' stamp: 'BV 4/19/2020 15:09'!caballo	^ caballo! !!ApuestaSimple methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:27'!caballo: anObject	(anObject isKindOf: Caballo) ifTrue: [ caballo := anObject].! !!ApuestaSimple methodsFor: 'initialization' stamp: 'BV 4/19/2020 15:09'!initialize	super initialize.	caballo := nil.! !Apuesta subclass: #ApuestaTriple	instanceVariableNames: 'caballos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1_PPR'!!ApuestaTriple commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	caballos:		<Object>    Implementation Points!!ApuestaTriple methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:11'!caballos: unCaballo	(unCaballo isKindOf: Caballo) ifTrue: [caballos := unCaballo].! !!ApuestaTriple methodsFor: 'accessing' stamp: 'BV 4/19/2020 15:19'!caballos	^ caballos! !!ApuestaTriple methodsFor: 'initialization' stamp: 'sa 4/23/2020 19:15'!initialize	super initialize.	caballos := Array new: 3.! !!ApuestaTriple methodsFor: 'propios' stamp: 'sa 4/24/2020 12:20'!posicion: unaPosicion agregarCaballo: unCaballo	(unCaballo isKindOf: Caballo ) ifTrue: [(unaPosicion isInteger and: unaPosicion <= 3) ifTrue: [(unaPosicion >= 1)ifTrue: [caballos at: unaPosicion put: unCaballo]]].! !!ApuestaTriple methodsFor: 'propios' stamp: 'sa 4/19/2020 15:58'!cuantoPaga	"comment stating purpose of message"	| aux |	aux:= super monto * 6.	^aux.! !!ApuestaTriple methodsFor: 'propios' stamp: 'sa 4/24/2020 17:10'!asString	"comment stating purpose of message"	 |datos aux str|    aux:= ''.    datos := super asString.    caballos do: [ :x | aux:= aux, x asString, String cr ].    str := datos ,'Caballos: ', String cr, aux.    ^str.! !Object subclass: #Caballo	instanceVariableNames: 'nombre jinete'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1_PPR'!!Caballo commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	jinete:		<Object>	nombre:		<Object>    Implementation Points!!Caballo methodsFor: 'propios' stamp: 'sa 4/24/2020 17:35'!asString 	|aux|	aux := 'Nombre: ', nombre asString,'------','Jinete: ', jinete asString.	^ aux.! !!Caballo methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:23'!nombre: anObject	(anObject isString) ifTrue: [nombre := anObject].! !!Caballo methodsFor: 'accessing' stamp: 'BV 4/19/2020 14:47'!jinete	^ jinete! !!Caballo methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:22'!jinete: anObject	(anObject isString) ifTrue: [jinete := anObject].! !!Caballo methodsFor: 'accessing' stamp: 'BV 4/19/2020 14:47'!nombre	^ nombre! !!Caballo methodsFor: 'initialization' stamp: 'sa 4/24/2020 17:21'!initialize	super initialize.	jinete := 'sin nombre'.	nombre := 'sin nombre'.! !Object subclass: #Carrera	instanceVariableNames: 'id fecha tipo competidores apuestas'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1_PPR'!!Carrera commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	apuestas:		<Object>	competidores:		<Object>	fecha:		<Object>	id:		<Object>	tipo:		<Object>    Implementation Points!!Carrera methodsFor: 'propios' stamp: 'sa 4/24/2020 17:08'!mostrarCuantoPagaApuesta: unaApuesta	"comment stating purpose of message"	| aux d cab cab1 cab2 paga1 paga2 |	paga1 := 1000.	d := ''.	aux := ''.	cab := ''.	cab:= competidores detect: [ :x | x puesto = 1 ] ifNone: [nil].	cab1 := competidores detect: [ :x | x puesto = 2 ] ifNone: [nil].	cab2 := competidores detect: [ :x | x puesto = 3 ] ifNone: [nil].	aux := apuestas detect: [ :x | x = unaApuesta ] ifNone: [nil ].   	aux ifNotNil: [  		tipo = 1		ifTrue: [ (aux isKindOf: ApuestaSimple)		ifTrue: [ cab ifNotNil: [(aux caballo = cab caballo) ifTrue: [ (aux cuantoPaga >= 1000) ifTrue: [ d:= 'Ganadora, paga: $', paga1 asString] ifFalse: [ d:= 'Ganadora, paga: $', aux cuantoPaga asString ] ] ifFalse: [d:= 'Perdedora']] ifNil: [d:= 'Perdedora']].	(aux isKindOf: ApuestaTriple) 	ifTrue: [ cab ifNotNil: [(aux caballos first = cab caballo) ifTrue: [ cab1 ifNotNil: [(aux caballos second = cab1 caballo) ifTrue: [ cab2 ifNotNil: [(aux caballos last = cab2 caballo) ifTrue: [ (aux cuantoPaga >= 1000) ifTrue: [ d:= 'Ganadora, paga: $', paga1 asString ] ifFalse:[d:= 'Ganadora, paga: $', aux cuantoPaga asString]   ] ifFalse:[d:= 'Perdedora'] ] ifNil: [ d:= 'Perdedora' ]   ] ifFalse: [ d:= 'Perdedora' ] ] ifNil: [ d:= 'Perdedora' ]   ] ifFalse:[d:= 'Perdedora' ]  ] ifNil: [ d:= 'Perdedora' ]   ]].		tipo = 2	ifTrue: [ paga2 := aux cuantoPaga - (aux cuantoPaga * 0.05). 		(aux isKindOf: ApuestaSimple)	ifTrue: [ cab ifNotNil: [(aux caballo = cab caballo) ifTrue: [ d:= 'Ganadora, paga: $', paga2 asString] ifFalse: [d:= 'Perdedora']] ifNil: [ d:= 'Perdedora' ]   ].	(aux isKindOf: ApuestaTriple) 	ifTrue: [ cab ifNotNil: [(aux caballos first = cab caballo) ifTrue: [ cab1 ifNotNil: [(aux caballos second = cab1 caballo) ifTrue: [cab2 ifNotNil: [(aux caballos last = cab2 caballo) ifTrue: [ d:= 'Ganadora, paga: $', paga2 asString ] ifFalse:[d:= 'Perdedora'] ] ifNil: [ d:='Perdedora' ]   ] ifFalse:[d:= 'Perdedora'] ] ifNil: [ d:= 'Perdedora' ]   ] ifFalse: [ d:= 'Perdedora' ]   ] ifNil: [ d:= 'Perdedora' ] ] ]] ifNil: [ d:= 'No existe' ].^d! !!Carrera methodsFor: 'propios' stamp: 'sa 4/24/2020 17:12'!agregarCaballo: unaInscripcion	 (competidores size < 10) ifTrue:[(unaInscripcion isKindOf: Inscripcion) ifTrue: [ competidores add: unaInscripcion ]].! !!Carrera methodsFor: 'propios' stamp: 'sa 4/22/2020 20:38'!inscrip: unaInscripcion registrarPuesto: unPuesto    (unaInscripcion isKindOf: Inscripcion) ifTrue: [ unaInscripcion puesto: unPuesto].	! !!Carrera methodsFor: 'propios' stamp: 'sa 4/24/2020 17:14'!asString    |apu aux|    apu := 0.    apuestas do: [ :x | apu := apu + x monto  ].    aux := 'Fecha y hora: ', fecha asString, '  ----  ',    'ID: ', id asString, '  ----  ',    'Tipo: ', tipo asString, String cr.    competidores do: [ :x | (x puesto ~= 0) ifTrue:[ aux := aux, x caballo asString , String cr. ]  ].    aux := aux,String cr, 'Monto total apostado: $' , apu asString.    ^aux.! !!Carrera methodsFor: 'propios' stamp: 'sa 4/19/2020 20:02'!mostrarResultados    "comment stating purpose of message"   | aux result|   aux:= ''.   result := competidores asSortedCollection.   result  do: [ :x | (x puesto > 0) ifTrue: [aux:= aux,'Nombre: ',x caballo nombre  asString, String cr,'Puesto: ', x puesto asString,String cr]].   ^aux.! !!Carrera methodsFor: 'propios' stamp: 'sa 4/23/2020 19:31'!registrarApuesta: unaApuesta    "comment stating purpose of message"    (unaApuesta isKindOf: Apuesta)ifTrue: [apuestas add: unaApuesta].! !!Carrera methodsFor: 'initialization' stamp: 'sa 4/24/2020 17:28'!initialize	super initialize.	apuestas := Bag new.	competidores := Set new.	fecha := 'sin fecha'.	id := 0.	tipo := 0.! !!Carrera methodsFor: 'accessing' stamp: 'sa 4/19/2020 18:05'!apuestas	^ apuestas! !!Carrera methodsFor: 'accessing' stamp: 'sa 4/19/2020 18:05'!tipo	^ tipo! !!Carrera methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:28'!apuestas: anObject	apuestas := anObject! !!Carrera methodsFor: 'accessing' stamp: 'sa 4/19/2020 18:05'!competidores	^ competidores! !!Carrera methodsFor: 'accessing' stamp: 'sa 4/19/2020 18:05'!fecha	^ fecha! !!Carrera methodsFor: 'accessing' stamp: 'sa 4/19/2020 18:05'!id	^ id! !!Carrera methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:30'!tipo: anObject	(anObject isInteger) ifTrue:  [tipo := anObject].! !!Carrera methodsFor: 'accessing' stamp: 'sa 4/19/2020 18:05'!competidores: anObject	competidores := anObject! !!Carrera methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:29'!id: anObject	(anObject isInteger) ifTrue:  [id := anObject].! !!Carrera methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:29'!fecha: anObject	(anObject isString) ifTrue:  [fecha := anObject].! !Object subclass: #Inscripcion	instanceVariableNames: 'caballo puesto'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1_PPR'!!Inscripcion commentStamp: '<historical>' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design:For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	caballo:		<Object>	puesto:		<Object>    Implementation Points!!Inscripcion methodsFor: 'accessing' stamp: 'sa 4/19/2020 17:05'!puesto	^ puesto! !!Inscripcion methodsFor: 'accessing' stamp: 'sa 4/19/2020 17:05'!caballo	^ caballo! !!Inscripcion methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:32'!puesto: anObject	(anObject isInteger) ifTrue:  [puesto := anObject].! !!Inscripcion methodsFor: 'accessing' stamp: 'sa 4/24/2020 17:31'!caballo: anObject	(anObject isKindOf: Caballo) ifTrue:  [caballo:= anObject].! !!Inscripcion methodsFor: 'propios' stamp: 'sa 4/19/2020 17:16'!<= otraInscripcion	"comment stating purpose of message"	^self puesto <= otraInscripcion puesto.! !!Inscripcion methodsFor: 'propios' stamp: 'sa 4/24/2020 17:32'!actualizarPuesto: aPuesto    "comment stating purpose of message"     (aPuesto  isInteger ) ifTrue: [puesto := aPuesto ].! !!Inscripcion methodsFor: 'propios' stamp: 'sa 4/19/2020 17:36'!asString   | aux |    aux := 'Caballo: ',String cr, caballo asString, String cr, 'Puesto: ', puesto asString, String cr.	^aux.! !!Inscripcion methodsFor: 'propios' stamp: 'sa 4/19/2020 17:14'!asignarCaballo: aCaballo    (aCaballo  isKindOf: Caballo ) ifTrue: [ caballo := aCaballo].! !!Inscripcion methodsFor: 'initialization' stamp: 'sa 4/19/2020 17:07'!initialize	super initialize.	caballo := 'sin caballo'.	puesto := 0.! !